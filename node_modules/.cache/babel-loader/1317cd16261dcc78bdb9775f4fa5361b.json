{"ast":null,"code":"import _defineProperty from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\ITI\\\\React\\\\lab1\\\\app\\\\src\\\\components\\\\Movies\\\\list.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MovieCard from './card';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { InputGroup } from 'react-bootstrap';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Movies, _React$Component);\n\n  function Movies(props) {\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movies).call(this, props));\n    _this.state = {\n      searchName: '',\n      current: _this.props.data,\n      checked: false\n    };\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getWatchedMovies = _this.getWatchedMovies.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"search\",\n    value: function search(e) {\n      var _this2 = this;\n\n      // debugger;\n      var name = e.target.name;\n      var value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n      this.setState(_defineProperty({}, name, value), function () {\n        console.log(_this2.state);\n        debugger;\n\n        var finalArray = _this2.props.data.filter(function (element) {\n          var _this2$state = _this2.state,\n              searchName = _this2$state.searchName,\n              checked = _this2$state.checked;\n          debugger;\n          console.log(element.Title.toLowerCase().includes(searchName));\n          return element.Title.toLowerCase().includes(searchName) && checked === element.watched;\n        });\n\n        _this2.setState({\n          current: finalArray\n        });\n      });\n    }\n  }, {\n    key: \"getWatchedMovies\",\n    value: function getWatchedMovies(e) {\n      var checked = e.target.checked;\n      var finalArray;\n\n      if (checked) {\n        finalArray = this.props.data.filter(function (element) {\n          return element.watched === true;\n        });\n        this.setState({\n          current: finalArray\n        });\n      } else {\n        finalArray = this.props.data;\n        this.setState({\n          current: finalArray\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // let { data } = this.props;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Normal text\",\n        className: \"form-textbox\",\n        onChange: this.search,\n        name: \"searchName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"filters-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Filters\"), React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Watched Movies\",\n        className: \"form-checkbox\",\n        onChange: this.search,\n        name: \"checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.current.map(function (a) {\n        return React.createElement(MovieCard, Object.assign({\n          key: a.imdbID\n        }, a, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Movies;\n}(React.Component);\n\nexport default Movies;","map":{"version":3,"sources":["E:\\ITI\\React\\lab1\\app\\src\\components\\Movies\\list.js"],"names":["React","MovieCard","Form","Button","InputGroup","Movies","props","state","searchName","current","data","checked","search","bind","getWatchedMovies","e","name","target","value","type","setState","console","log","finalArray","filter","element","Title","toLowerCase","includes","watched","map","a","imdbID","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport MovieCard from './card';\r\n\r\nimport { Form } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { InputGroup } from 'react-bootstrap';\r\n\r\nclass Movies extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchName: '',\r\n            current: this.props.data,\r\n            checked: false\r\n        };\r\n        this.search = this.search.bind(this);\r\n        this.getWatchedMovies = this.getWatchedMovies.bind(this);\r\n\r\n    }\r\n    \r\n    search(e) {\r\n        // debugger;\r\n        const name= e.target.name;\r\n        const value = e.target.type==='checkbox'? e.target.checked : e.target.value;\r\n        this.setState({ [name]: value }, ()=>{\r\n            console.log(this.state)\r\n            debugger\r\n            const finalArray=this.props.data.filter(element=>\r\n                {\r\n                    const {searchName, checked} = this.state;\r\n                    debugger;\r\n                    console.log(element.Title.toLowerCase().includes(searchName));\r\n                    return element.Title.toLowerCase().includes(searchName) && checked === element.watched\r\n                });\r\n            this.setState({current: finalArray});\r\n        });\r\n        \r\n    }\r\n    getWatchedMovies(e) {\r\n        var checked = e.target.checked;\r\n        let finalArray;\r\n        if (checked) {\r\n            finalArray = this.props.data.filter((element) => element.watched === true);\r\n            this.setState({ current: finalArray });\r\n        }\r\n        else {\r\n            finalArray = this.props.data;\r\n            this.setState({ current: finalArray });\r\n        }\r\n     \r\n    }\r\n    render() {\r\n\r\n        // let { data } = this.props;\r\n        return (\r\n            <>\r\n                <div className=\"controls\">\r\n                <Form.Control type=\"text\" placeholder=\"Normal text\" className=\"form-textbox\" onChange={this.search} name=\"searchName\"/>\r\n                <div className=\"filters\">\r\n                 <span className=\"filters-title\">Filters</span>\r\n                <Form.Check type=\"checkbox\" label=\"Watched Movies\" className=\"form-checkbox\" onChange={this.search} name=\"checked\" />\r\n                </div>\r\n                </div>\r\n                <div className=\"cards\">\r\n                    {\r\n\r\n                        this.state.current.map(\r\n                            a => <MovieCard key={a.imdbID} {...a} />\r\n\r\n                        )\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}