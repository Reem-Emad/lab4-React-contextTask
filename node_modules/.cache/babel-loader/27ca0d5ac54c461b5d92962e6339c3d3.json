{"ast":null,"code":"import _classCallCheck from \"E:\\\\ITI\\\\React\\\\lab4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\ITI\\\\React\\\\lab4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\ITI\\\\React\\\\lab4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"E:\\\\ITI\\\\React\\\\lab4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\ITI\\\\React\\\\lab4\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\ITI\\\\React\\\\lab4\\\\app\\\\src\\\\components\\\\Task\\\\Task.js\";\nimport React from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { MyContext } from '../../App';\n\nvar Task =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Task, _React$PureComponent);\n\n  function Task(props) {\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    // super(props);\n    // this.state = {\n    //     btnTxt: '',\n    //     showDone: true\n    // }\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.handleComplete = this.handleComplete.bind(this);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Task, [{\n    key: \"handleDelete\",\n    value: function handleDelete(e) {\n      // this.setState({ showDone: false });\n      this.props.deleteTask(e.currentTarget.dataset.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          body = _this$props.body,\n          id = _this$props.id;\n      var Donebtntxt = this.props.completed ? 'Undo' : 'Done';\n      var Deletebtntxt = this.props.deleted ? 'Undelete' : 'Delete';\n      return React.createElement(MyContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, function (value) {\n        return React.createElement(React.Fragment, null, React.createElement(Card, {\n          className: \"Task_card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Card.Body, {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, body), !_this2.props.deleted && React.createElement(Button, {\n          variant: \"primary\",\n          className: \"Task_btn\",\n          style: {\n            backgroundColor: '#328A3B',\n            borderColor: '#328A3B'\n          },\n          \"data-id\": id,\n          onClick: _this2.handleComplete(value.data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, Donebtntxt), React.createElement(Button, {\n          variant: \"primary\",\n          className: \"Task_btn\",\n          style: {\n            backgroundColor: '#D93738',\n            borderColor: '#D93738'\n          },\n          \"data-id\": id,\n          onClick: _this2.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, Deletebtntxt))));\n      });\n    }\n  }]);\n\n  return Task;\n}(React.PureComponent);\n\nexport default Task;","map":{"version":3,"sources":["E:\\ITI\\React\\lab4\\app\\src\\components\\Task\\Task.js"],"names":["React","Card","Button","MyContext","Task","props","handleDelete","bind","e","deleteTask","currentTarget","dataset","id","body","Donebtntxt","completed","Deletebtntxt","deleted","value","display","backgroundColor","borderColor","handleComplete","data","PureComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,WAA1B;;IAGMC,I;;;;;AAGF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf;AACA;AACA;AACA;AACA;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB,CANe,CAOf;;AAPe;AAUlB;;;;iCAEYC,C,EAAG;AACZ;AACA,WAAKH,KAAL,CAAWI,UAAX,CAAsBD,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBC,EAA9C;AAEH;;;6BAmBQ;AAAA;;AAAA,wBAEgB,KAAKP,KAFrB;AAAA,UAEGQ,IAFH,eAEGA,IAFH;AAAA,UAESD,EAFT,eAESA,EAFT;AAGL,UAAME,UAAU,GAAG,KAAKT,KAAL,CAAWU,SAAX,GAAuB,MAAvB,GAAgC,MAAnD;AACA,UAAMC,YAAY,GAAG,KAAKX,KAAL,CAAWY,OAAX,GAAqB,UAArB,GAAkC,QAAvD;AAEA,aACI,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAAC,KAAK;AAAA,eAGE,0CACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaN,IAAb,CADJ,EAEK,CAAC,MAAI,CAACR,KAAL,CAAWY,OAAZ,IAAuB,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,SAAS,EAAC,UAApC;AAA+C,UAAA,KAAK,EAAE;AAAEG,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,WAAW,EAAE;AAA3C,WAAtD;AAA8G,qBAAST,EAAvH;AAA2H,UAAA,OAAO,EAAE,MAAI,CAACU,cAAL,CAAoBJ,KAAK,CAACK,IAA1B,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsKT,UAAtK,CAF5B,EAGI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,SAAS,EAAC,UAApC;AAA+C,UAAA,KAAK,EAAE;AAAEM,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,WAAW,EAAE;AAA3C,WAAtD;AAA8G,qBAAST,EAAvH;AAA2H,UAAA,OAAO,EAAE,MAAI,CAACN,YAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwJU,YAAxJ,CAHJ,CADJ,CADJ,CAHF;AAAA,OADV,CADJ;AAmBH;;;;EA/DchB,KAAK,CAACwB,a;;AAqEzB,eAAepB,IAAf","sourcesContent":["import React from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { MyContext } from '../../App';\r\n\r\n\r\nclass Task extends React.PureComponent {\r\n\r\n\r\n    constructor(props) {\r\n        // super(props);\r\n        // this.state = {\r\n        //     btnTxt: '',\r\n        //     showDone: true\r\n        // }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        // this.handleComplete = this.handleComplete.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleDelete(e) {\r\n        // this.setState({ showDone: false });\r\n        this.props.deleteTask(e.currentTarget.dataset.id);\r\n\r\n    }\r\n    handleComplete= (data) => (e) => {\r\n        // this.setState({ btnTxt: 'Undone' });\r\n        // const copyState=data.slice();\r\n        data.forEach(t => {\r\n          if(t.id===e.currentTarget.dataset.id)\r\n          {\r\n            \r\n           if(t.completed==false)\r\n           {\r\n            t.completed=true;\r\n           }\r\n         \r\n\r\n          }\r\n        });\r\n        // return {...state, doingTasks:copyState};\r\n        // this.props.completeTask(e.currentTarget.dataset.id);\r\n    }\r\n    render() {\r\n\r\n        const { body, id } = this.props;\r\n        const Donebtntxt = this.props.completed ? 'Undo' : 'Done';\r\n        const Deletebtntxt = this.props.deleted ? 'Undelete' : 'Delete';\r\n\r\n        return (\r\n            <MyContext.Consumer>\r\n                {value =>\r\n                    (\r\n\r\n                        <>\r\n                            <Card className=\"Task_card\">\r\n                                <Card.Body style={{ display: 'flex' }}>\r\n                                    <Card.Text >{body}</Card.Text>\r\n                                    {!this.props.deleted && <Button variant=\"primary\" className=\"Task_btn\" style={{ backgroundColor: '#328A3B', borderColor: '#328A3B' }} data-id={id} onClick={this.handleComplete(value.data)}>{Donebtntxt}</Button>}\r\n                                    <Button variant=\"primary\" className=\"Task_btn\" style={{ backgroundColor: '#D93738', borderColor: '#D93738' }} data-id={id} onClick={this.handleDelete}>{Deletebtntxt}</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </>\r\n                    )\r\n                }\r\n            </MyContext.Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}