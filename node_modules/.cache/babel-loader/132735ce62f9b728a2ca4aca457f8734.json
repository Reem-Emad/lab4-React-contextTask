{"ast":null,"code":"import _toConsumableArray from \"E:\\\\ITI\\\\React\\\\lab3\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\ITI\\\\React\\\\lab3\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default (function (state, action) {\n  // debugger;\n  switch (action.type) {\n    case 'SET_DOING_TASKS':\n      return _objectSpread({}, state, {\n        doingTasks: [].concat(_toConsumableArray(state.doingTasks), [action.doingTasks])\n      });\n\n    case 'COMPLETE_TASK':\n      {\n        var copyState = state.doingTasks.slice();\n        copyState.forEach(function (t) {\n          if (t.id === action.id) {\n            if (t.completed != true) {\n              t.completed = true;\n            } else {\n              t.completed = false;\n            }\n\n            t.deleted = false;\n          }\n        });\n        return _objectSpread({}, state, {\n          doingTasks: copyState\n        });\n      }\n\n    case 'DELETE_TASK':\n      {\n        var _copyState = state.doingTasks.slice();\n\n        _copyState.forEach(function (t) {\n          if (t.id === action.id) {\n            t.completed = false;\n            t.deleted = true;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          doingTasks: _copyState\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:\\ITI\\React\\lab3\\app\\src\\reducers\\tasks.js"],"names":["state","action","type","doingTasks","copyState","slice","forEach","t","id","completed","deleted"],"mappings":";;AAAA,gBAAe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAChC;AACE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,UAAU,+BAAMH,KAAK,CAACG,UAAZ,IAAuBF,MAAM,CAACE,UAA9B;AAA7B;;AACF,SAAK,eAAL;AACA;AACE,YAAMC,SAAS,GAACJ,KAAK,CAACG,UAAN,CAAiBE,KAAjB,EAAhB;AACAD,QAAAA,SAAS,CAACE,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACrB,cAAGA,CAAC,CAACC,EAAF,KAAOP,MAAM,CAACO,EAAjB,EACA;AAEC,gBAAGD,CAAC,CAACE,SAAF,IAAa,IAAhB,EACA;AACCF,cAAAA,CAAC,CAACE,SAAF,GAAY,IAAZ;AACA,aAHD,MAKA;AACCF,cAAAA,CAAC,CAACE,SAAF,GAAY,KAAZ;AAEA;;AACDF,YAAAA,CAAC,CAACG,OAAF,GAAU,KAAV;AAEA;AACF,SAhBD;AAiBA,iCAAWV,KAAX;AAAkBG,UAAAA,UAAU,EAACC;AAA7B;AACD;;AACD,SAAK,aAAL;AACE;AACE,YAAMA,UAAS,GAACJ,KAAK,CAACG,UAAN,CAAiBE,KAAjB,EAAhB;;AACAD,QAAAA,UAAS,CAACE,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACrB,cAAGA,CAAC,CAACC,EAAF,KAAOP,MAAM,CAACO,EAAjB,EACA;AACED,YAAAA,CAAC,CAACE,SAAF,GAAY,KAAZ;AACAF,YAAAA,CAAC,CAACG,OAAF,GAAU,IAAV;AAED;AACF,SAPD;;AAQA,iCAAWV,KAAX;AAAkBG,UAAAA,UAAU,EAACC;AAA7B;AACD;;AACH;AACE,aAAOJ,KAAP;AAvCJ;AAyCD,CA3CH","sourcesContent":["export default (state, action) => {\r\n  // debugger;\r\n    switch (action.type) {\r\n      case 'SET_DOING_TASKS':\r\n        return { ...state, doingTasks: [...state.doingTasks,action.doingTasks] };\r\n      case 'COMPLETE_TASK':\r\n      {\r\n        const copyState=state.doingTasks.slice();\r\n        copyState.forEach(t => {\r\n          if(t.id===action.id)\r\n          {\r\n            \r\n           if(t.completed!=true)\r\n           {\r\n            t.completed=true;\r\n           }\r\n           else\r\n           {\r\n            t.completed=false;\r\n          \r\n           }\r\n           t.deleted=false;\r\n\r\n          }\r\n        });\r\n        return {...state, doingTasks:copyState};\r\n      }\r\n      case 'DELETE_TASK':\r\n        {\r\n          const copyState=state.doingTasks.slice();\r\n          copyState.forEach(t => {\r\n            if(t.id===action.id)\r\n            {\r\n              t.completed=false;\r\n              t.deleted=true;\r\n            \r\n            }\r\n          });\r\n          return {...state, doingTasks:copyState};\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}