{"ast":null,"code":"import _toConsumableArray from \"E:\\\\ITI\\\\React\\\\lab3\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\ITI\\\\React\\\\lab3\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default (function (state, action) {\n  // debugger;\n  switch (action.type) {\n    case 'SET_DOING_TASKS':\n      return _objectSpread({}, state, {\n        doingTasks: [].concat(_toConsumableArray(state.doingTasks), [action.doingTasks])\n      });\n\n    case 'SET_DONE_TASKS':\n      return _objectSpread({}, state, {\n        doneTasks: action.doneTasks\n      });\n\n    case 'DELETE_TASK':\n      {\n        debugger;\n        var arr = state.doingTasks.map(function (t) {\n          if (t.id === action.id) {\n            t.deleted = true; // console.log(t);\n          }\n        }); // console.log(state);\n\n        return _objectSpread({}, state, {\n          doingTasks: arr\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:\\ITI\\React\\lab3\\app\\src\\reducers\\tasks.js"],"names":["state","action","type","doingTasks","doneTasks","arr","map","t","id","deleted"],"mappings":";;AAAA,gBAAe,UAACA,KAAD,EAAQC,MAAR,EAAmB;AAChC;AACE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,UAAU,+BAAMH,KAAK,CAACG,UAAZ,IAAuBF,MAAM,CAACE,UAA9B;AAA7B;;AACF,SAAK,gBAAL;AACA,+BAAYH,KAAZ;AAAoBI,QAAAA,SAAS,EAAEH,MAAM,CAACG;AAAtC;;AACA,SAAK,aAAL;AACE;AACE;AACD,YAAMC,GAAG,GAAEL,KAAK,CAACG,UAAN,CAAiBG,GAAjB,CAAqB,UAAAC,CAAC,EAAI;AAClC,cAAGA,CAAC,CAACC,EAAF,KAAOP,MAAM,CAACO,EAAjB,EACA;AAEED,YAAAA,CAAC,CAACE,OAAF,GAAU,IAAV,CAFF,CAGE;AACD;AACF,SAPS,CAAX,CAFD,CAUE;;AAEA,iCAAWT,KAAX;AAAkBG,UAAAA,UAAU,EAACE;AAA7B;AACD;;AACH;AACE,aAAOL,KAAP;AArBJ;AAuBD,CAzBH","sourcesContent":["export default (state, action) => {\r\n  // debugger;\r\n    switch (action.type) {\r\n      case 'SET_DOING_TASKS':\r\n        return { ...state, doingTasks: [...state.doingTasks,action.doingTasks] };\r\n      case 'SET_DONE_TASKS':\r\n      return { ...state,  doneTasks: action.doneTasks };\r\n      case 'DELETE_TASK':\r\n        {\r\n          debugger\r\n         const arr= state.doingTasks.map(t => {\r\n            if(t.id===action.id)\r\n            {\r\n             \r\n              t.deleted=true;\r\n              // console.log(t);\r\n            }\r\n          })\r\n          // console.log(state);\r\n\r\n          return {...state, doingTasks:arr};\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}